{"version":3,"file":"632.a42fa65714d3c2e76c57.chunk.js","mappings":"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","sources":["webpack://bee-mobile/./examples/cases/Main.tsx","webpack://bee-mobile/./src/components/Router/RouteTransition.tsx","webpack://bee-mobile/./src/components/Router/AnimatedSwitch.tsx","webpack://bee-mobile/./src/components/Sidebar/Sidebar.tsx","webpack://bee-mobile/./src/components/View/View.tsx"],"sourcesContent":["import  React from \"react\";\nimport  ReactDOM from \"react-dom\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport { spring } from \"react-motion\";\nimport Sidebar from \"../../src/components/Sidebar\";\nimport View from \"../../src/components/View\";\nimport Page from \"../../src/components/Page\";\nimport List, { ListItem, ListItemText } from \"../../src/components/List\";\nimport { MENUS } from \"../common/Menus\";\nimport Icon from \"../../src/components/Icon\";\nimport NavBar from \"../../src/components/NavBar\";\nimport Popover from \"../../src/components/Popover\";\nimport Button from \"../../src/components/Button\";\nimport { AnimatedSwitch } from \"../../src/components/Router\";\nimport { getOtherProperties } from \"../../src/components/common/Utils\";\nimport { ROUTE_CONFIG } from \"../AppRouting\";\n\ninterface MainState {\n  anchorEl?: any;\n  menuVisible: boolean;\n  reveal: boolean;\n  title: string;\n}\n\nexport default class Main extends React.PureComponent<any, MainState> {\n  menus = MENUS;\n  button: any;\n  pageTransitions = {\n    enterStyles: {\n      x: 200,\n      opacity: 0,\n    },\n    leaveStyles: {\n      x: spring(-100),\n      opacity: spring(0),\n    },\n    activeStyles: {\n      x: spring(0, {\n        stiffness: 128,\n        damping: 16,\n      }),\n      opacity: spring(1, {\n        stiffness: 128,\n        damping: 16,\n      }),\n    },\n  };\n  version = process.env.VERSION;\n\n  state = {\n    anchorEl: \"\",\n    menuVisible: false,\n    reveal: false,\n    title: \"\",\n  };\n\n  toggleSidebar = () => {\n    this.setState({\n      reveal: !this.state.reveal,\n    });\n  };\n\n  handleClickButton = () => {\n    this.setState({\n      menuVisible: !this.state.menuVisible!,\n      anchorEl: ReactDOM.findDOMNode(this.button),\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      menuVisible: false,\n    });\n  };\n\n  handleClick = (menu: any) => {\n    this.setState({\n      title: menu.name,\n    });\n    document.title = `${menu.name}-bee-mobile`;\n  };\n\n  render() {\n    const menus = [\n      {\n        text: \"Grid\",\n      },\n      {\n        text: \"Buttons\",\n      },\n      {\n        text: \"Lists\",\n      },\n    ];\n    this.menus = MENUS.filter((menu: any) => {\n      return [\"Ripple\"].indexOf(menu.name) === -1;\n    });\n    return (\n      <div className=\"Main height-100\">\n        <Sidebar\n          reveal={this.state.reveal}\n          className=\"Page-aside\"\n          onClose={this.toggleSidebar}\n        >\n          <div className=\"Sidebar-header\">\n            <h2>bee-mobile</h2>\n            <p>v{this.version}</p>\n          </div>\n          <List>\n            {this.menus.map((menu, index) => (\n              <ListItem\n                key={index.toString()}\n                onClick={this.handleClick.bind(this, menu)}\n              >\n                <ListItemText>\n                  <NavLink\n                    onClick={this.toggleSidebar}\n                    to={menu.path}\n                    // activeClassName=\"active\"\n                    className={({ isActive }) => (isActive ? \"active\" : \"\")}\n                  >\n                    {menu.name}\n                  </NavLink>\n                </ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Sidebar>\n        <View reveal={this.state.reveal} onClose={this.toggleSidebar}>\n          <Page isActive={true}>\n            <NavBar\n              fixed={true}\n              left={\n                <Button onClick={this.toggleSidebar}>\n                  <Icon icon=\"menu\" />\n                </Button>\n              }\n              center={this.state.title}\n              right={\n                <Button onClick={this.handleClickButton}>\n                  <Icon icon=\"more_vert\" ref={(node) => (this.button = node)} />\n                </Button>\n              }\n            />\n            <AnimatedSwitch\n              {...this.pageTransitions}\n              styles={(style: any) => ({\n                transform: `translate3d(${style.x}px, 0, 0)`,\n                opacity: style.opacity,\n              })}\n              className=\"bm-PageContent\"\n            >\n              {/* {ROUTE_CONFIG.map((route: any, i: number) => (\n                  <Route\n                    path={route.path}\n                    key={i}\n                    element={<route.component />}\n                  />\n                ))} */}\n              {/* 子路由位置 */}\n              <Outlet />\n            </AnimatedSwitch>\n          </Page>\n        </View>\n\n        <Popover\n          dir=\"top-left\"\n          anchorEl={this.state.anchorEl!}\n          visible={this.state.menuVisible!}\n          onClose={this.handleClose}\n        >\n          <List>\n            {menus.map((menu, index) => (\n              <ListItem key={index.toString()}>\n                <ListItemText>{menu.text}</ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Popover>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionMotion } from \"react-motion\";\nimport { RouteTransitionProps } from \"./PropsType\";\n\nexport default class RouteTransition extends React.PureComponent<\n  RouteTransitionProps,\n  any\n> {\n  static defaultProps = {\n    prefixCls: \"bm-RouteTransition\",\n    wrapperComponent: \"div\",\n  };\n\n  getDefaultStyles() {\n    const { children, enterStyles }: any = this.props;\n    if (!children) {\n      return [];\n    }\n    return [\n      {\n        key: children.key || `transition_${Math.floor(Math.random() * 100)}`,\n        data: children!,\n        style: enterStyles!,\n      },\n    ];\n  }\n\n  getStyles() {\n    const { children, activeStyles }: any = this.props;\n    if (!children) {\n      return [];\n    }\n    return [\n      {\n        key: children.key || `transition_${Math.floor(Math.random() * 100)}`,\n        data: children!,\n        style: activeStyles!,\n      },\n    ];\n  }\n\n  willEnter = () => {\n    return this.props.enterStyles!;\n  };\n\n  willLeave = (): any => {\n    return { ...this.props.leaveStyles! };\n  };\n\n  didLeave = (styleThatLeft: object) => {\n    if (this.props.didLeave) {\n      this.props.didLeave(styleThatLeft);\n    }\n  };\n\n  renderElement = (config: any = {}) => {\n    const styles: any = this.props.styles;\n    const props: any = {\n      style: styles(config.style)!,\n      key: config.key,\n    };\n    return !!this.props.wrapperComponent !== false\n      ? React.createElement(this.props.wrapperComponent, props, config.data)\n      : React.cloneElement(config.data, props);\n  };\n\n  render() {\n    const { className, transitionName, prefixCls } = this.props;\n    const styleClass = classNames(prefixCls, className, transitionName);\n    return (\n      <TransitionMotion\n        defaultStyles={this.getDefaultStyles()}\n        styles={this.getStyles()}\n        willEnter={this.willEnter}\n        willLeave={this.willLeave}\n      >\n        {(styles: any) => (\n          <div className={styleClass}>{styles.map(this.renderElement)}</div>\n        )}\n      </TransitionMotion>\n    );\n  }\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { matchPath, useLocation } from \"react-router-dom\";\nimport RouteTransition from \"./RouteTransition\";\nimport { AnimatedSwitchProps } from \"./PropsType\";\nimport { getOtherProperties } from \"../common/Utils\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst NO_MATCH = {\n  key: \"no-match\",\n};\n\nfunction AnimatedSwitch(props: AnimatedSwitchProps) {\n  const {\n    className,\n    children,\n    prefixCls = \"bm-AnimatedSwitch\",\n    ...other\n  } = props;\n  let matches: number = 0;\n  const location = useLocation();\n  const styleClass = classNames(prefixCls, className);\n  const otherProps = getOtherProperties(other, [\"key\", \"match\"]);\n\n  // const getMatchedRoute = (children: any, pathname: any) => {\n  //   return (\n  //     React.Children.toArray(children).find((child: any) => {\n  //       console.log(pathname, child.props);\n  //       return matchPath(pathname, child.props.path);\n  //     }) || NO_MATCH\n  //   );\n  // };\n\n  // const getLocationKey = (location: any) => {\n  //   return typeof location.key === \"string\" ? location.key : \"\";\n  // };\n  // const [state, setState] = useState({\n  //   key: getLocationKey(location),\n  //   match: getMatchedRoute(props.children, location.pathname),\n  // });\n\n  useEffect(() => {\n    if (props.onRouteChange) {\n      (props.onRouteChange as (event: any) => void)(location);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   const nextMatch: any = getMatchedRoute(props.children, location.pathname);\n  //   if ((state.match as any).key !== nextMatch.key) {\n  //     setState({\n  //       ...state,\n  //       match: nextMatch,\n  //       key: getLocationKey(location) + ++matches,\n  //     });\n  //     if (props.onRouteChange) {\n  //       (props.onRouteChange as (event: any) => void)(location);\n  //     }\n  //   }\n  // }, [props.location, props.children]);\n\n  return (\n    <RouteTransition className={styleClass} {...otherProps}>\n      {children}\n    </RouteTransition>\n  );\n}\n\n// class AnimatedSwitch extends React.PureComponent<\n//   AnimatedSwitchProps,\n//   AnimatedSwitchState\n// > {\n//   static defaultProps = {\n//     prefixCls: \"bm-AnimatedSwitch\",\n//     location: {\n//       pathname: \"\",\n//     },\n//   };\n//   matches: number = 0;\n\n//   constructor(props: AnimatedSwitchProps) {\n//     super(props);\n//     this.state = {\n//       key: this.getLocationKey(this.props.location),\n//       match: this.getMatchedRoute(\n//         this.props.children,\n//         (this.props.location as any).pathname\n//       ),\n//     };\n//   }\n\n//   componentDidMount() {\n//     if (this.props.onRouteChange) {\n//       (this.props.onRouteChange as (event: any) => void)(this.props.location);\n//     }\n//   }\n\n//   componentWillReceiveProps(nextProps: AnimatedSwitchProps) {\n//     const nextMatch: any = this.getMatchedRoute(\n//       nextProps.children,\n//       (nextProps.location as any).pathname\n//     );\n//     if ((this.state.match as any).key !== nextMatch.key) {\n//       this.setState({\n//         match: nextMatch,\n//         key: this.getLocationKey(nextProps.location) + ++this.matches,\n//       });\n//       if (this.props.onRouteChange) {\n//         (this.props.onRouteChange as (event: any) => void)(nextProps.location);\n//       }\n//     }\n//   }\n\n//   getMatchedRoute(children: any, pathname: any) {\n//     return (\n//       React.Children.toArray(children).find((child: any) => {\n//         // return matchPath(pathname, {\n//         //   exact: child.props.exact,\n//         //   path: child.props.path,\n//         // });\n//         return matchPath(pathname, child.props.path);\n//       }) || NO_MATCH\n//     );\n//   }\n\n//   getLocationKey(location: any) {\n//     return typeof location.key === \"string\" ? location.key : \"\";\n//   }\n\n//   render() {\n//     const { className, children, location, prefixCls, ...other } = this.props;\n//     const styleClass = classNames(prefixCls, className);\n//     const otherProps = getOtherProperties(other, [\"key\", \"match\"]);\n//     return (\n//       <RouteTransition className={styleClass} {...otherProps}>\n//         {/* <Switch key={this.state.key} location={location}> */}\n//         {children}\n//         {/* </Switch> */}\n//       </RouteTransition>\n//     );\n//   }\n// }\n\nconst RouteWrapper = (props: any) => {\n  // When location change, Route always render, so we can get the location\n  // return (\n  //   <Routes>\n  //     <Route\n  //       children={({ location }: any) => {\n  //         return <AnimatedSwitch location={location} {...props} />;\n  //       }}\n  //     />\n  //   </Routes>\n  // );\n  return <AnimatedSwitch {...props} />;\n};\n\nexport default RouteWrapper;\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SidebarProps } from \"./PropsType\";\n\nexport default function Sidebar(props: SidebarProps) {\n  const toggleSidebar = () => {\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  const {\n    children,\n    dir = \"left\",\n    drawer = true,\n    className = \"\"\n  } = props;\n  const [reveal, setReveal] = useState(!!props.reveal);\n  const styleClass = classNames(\n    \"Sidebar\",\n    {\n      \"Sidebar-open\": reveal,\n      \"Sidebar-drawer\": drawer,\n    },\n    `Sidebar-${dir}-reveal`,\n    className\n  );\n\n  useEffect(() => {\n    setReveal(!!props.reveal);\n  }, [props.reveal]);\n\n  return (\n    <div className={styleClass}>\n      <div className=\"Sidebar-overlay\" onClick={toggleSidebar} />\n      <div className=\"Sidebar-inner\">{children}</div>\n    </div>\n  );\n}\n\n// export default class Sidebar extends React.PureComponent<\n//   SidebarProps,\n//   SidebarState\n// > {\n//   static defaultProps = {\n//     dir: \"left\",\n//     drawer: true,\n//     className: \"\",\n//     reveal: false,\n//   };\n//   state: SidebarState = {\n//     reveal: false,\n//   };\n\n//   componentDidMount() {\n//     const { reveal } = this.props;\n//     this.setState({\n//       reveal: !!reveal,\n//     });\n//   }\n\n//   toggleSidebar = () => {\n//     if (this.props.onClose) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     const { className, reveal, drawer, dir, children } = this.props;\n//     const styleClass = classNames(\n//       \"Sidebar\",\n//       {\n//         \"Sidebar-open\": reveal,\n//         \"Sidebar-drawer\": drawer,\n//       },\n//       `Sidebar-${dir}-reveal`,\n//       className\n//     );\n//     return (\n//       <div className={styleClass}>\n//         <div className=\"Sidebar-overlay\" onClick={this.toggleSidebar} />\n//         <div className=\"Sidebar-inner\">{children}</div>\n//       </div>\n//     );\n//   }\n// }\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { ViewProps, ViewState } from \"./PropsType\";\n\nexport default function View(props: ViewProps) {\n  const { className, overlayBackground = \"transparent\", children } = props;\n\n  const toggleSidebar = () => {\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"View\", className)}\n      style={{\n        background: overlayBackground,\n      }}\n    >\n      {children}\n      <div className=\"View-overlay\" onClick={toggleSidebar} />\n    </div>\n  );\n}\n"],"names":["Main","menu","menus","index","isActive","node","style","RouteTransition","styleThatLeft","config","styles","props","children","enterStyles","activeStyles","className","transitionName","prefixCls","styleClass","NO_MATCH","AnimatedSwitch","other","matches","location","otherProps","Sidebar","toggleSidebar","dir","drawer","reveal","setReveal","View","overlayBackground"],"sourceRoot":""}