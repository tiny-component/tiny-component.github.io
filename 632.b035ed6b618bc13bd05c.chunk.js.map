{"version":3,"file":"632.b035ed6b618bc13bd05c.chunk.js","mappings":"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","sources":["webpack://bee-mobile/./examples/cases/Main.tsx","webpack://bee-mobile/./src/components/Router/RouteTransition.tsx","webpack://bee-mobile/./src/components/Router/AnimatedSwitch.tsx","webpack://bee-mobile/./src/components/Sidebar/Sidebar.tsx","webpack://bee-mobile/./src/components/View/View.tsx"],"sourcesContent":["import  React from \"react\";\nimport  ReactDOM from \"react-dom\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport Sidebar from \"../../src/components/Sidebar\";\nimport View from \"../../src/components/View\";\nimport Page from \"../../src/components/Page\";\nimport List, { ListItem, ListItemText } from \"../../src/components/List\";\nimport { MENUS } from \"../common/Menus\";\nimport Icon from \"../../src/components/Icon\";\nimport NavBar from \"../../src/components/NavBar\";\nimport Popover from \"../../src/components/Popover\";\nimport Button from \"../../src/components/Button\";\nimport { AnimatedSwitch } from \"../../src/components/Router\";\n// import { getOtherProperties } from \"../../src/components/common/Utils\";\n// import { ROUTE_CONFIG } from \"../AppRouting\";\n\ninterface MainState {\n  anchorEl?: any;\n  menuVisible: boolean;\n  reveal: boolean;\n  title: string;\n}\n\nexport default class Main extends React.PureComponent<any, MainState> {\n  menus = MENUS;\n  button: any;\n  pageTransitions = {\n    enterStyles: {\n      x: 200,\n      opacity: 0,\n    },\n    leaveStyles: {\n      x: -100,\n      opacity: 0,\n    },\n    activeStyles: {\n      x: 0,\n      opacity: 1,\n    },\n  };\n  version = process.env.VERSION;\n\n  state = {\n    anchorEl: \"\",\n    menuVisible: false,\n    reveal: false,\n    title: \"\",\n  };\n\n  toggleSidebar = () => {\n    this.setState({\n      reveal: !this.state.reveal,\n    });\n  };\n\n  handleClickButton = () => {\n    this.setState({\n      menuVisible: !this.state.menuVisible!,\n      anchorEl: ReactDOM.findDOMNode(this.button),\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      menuVisible: false,\n    });\n  };\n\n  handleClick = (menu: any) => {\n    this.setState({\n      title: menu.name,\n    });\n    document.title = `${menu.name}-bee-mobile`;\n  };\n\n  render() {\n    const menus = [\n      {\n        text: \"Grid\",\n      },\n      {\n        text: \"Buttons\",\n      },\n      {\n        text: \"Lists\",\n      },\n    ];\n    this.menus = MENUS.filter((menu: any) => {\n      return [\"Ripple\"].indexOf(menu.name) === -1;\n    });\n    return (\n      <div className=\"Main height-100\">\n        <Sidebar\n          reveal={this.state.reveal}\n          className=\"Page-aside\"\n          onClose={this.toggleSidebar}\n        >\n          <div className=\"Sidebar-header\">\n            <h2>bee-mobile</h2>\n            <p>v{this.version}</p>\n          </div>\n          <List>\n            {this.menus.map((menu, index) => (\n              <ListItem\n                key={index.toString()}\n                onClick={this.handleClick.bind(this, menu)}\n              >\n                <ListItemText>\n                  <NavLink\n                    onClick={this.toggleSidebar}\n                    to={menu.path}\n                    // activeClassName=\"active\"\n                    className={({ isActive }) => (isActive ? \"active\" : \"\")}\n                  >\n                    {menu.name}\n                  </NavLink>\n                </ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Sidebar>\n        <View reveal={this.state.reveal} onClose={this.toggleSidebar}>\n          <Page isActive={true}>\n            <NavBar\n              fixed={true}\n              left={\n                <Button onClick={this.toggleSidebar}>\n                  <Icon icon=\"menu\" />\n                </Button>\n              }\n              center={this.state.title}\n              right={\n                <Button onClick={this.handleClickButton}>\n                  <Icon icon=\"more_vert\" ref={(node) => (this.button = node)} />\n                </Button>\n              }\n            />\n            <AnimatedSwitch\n              {...this.pageTransitions}\n              styles={(style: any) => ({\n                transform: `translate3d(${style.x}px, 0, 0)`,\n                opacity: style.opacity,\n              })}\n              className=\"bm-PageContent\"\n            >\n              {/* {ROUTE_CONFIG.map((route: any, i: number) => (\n                  <Route\n                    path={route.path}\n                    key={i}\n                    element={<route.component />}\n                  />\n                ))} */}\n              {/* 子路由位置 */}\n              <Outlet />\n            </AnimatedSwitch>\n          </Page>\n        </View>\n\n        <Popover\n          dir=\"top-left\"\n          anchorEl={this.state.anchorEl!}\n          visible={this.state.menuVisible!}\n          onClose={this.handleClose}\n        >\n          <List>\n            {menus.map((menu, index) => (\n              <ListItem key={index.toString()}>\n                <ListItemText>{menu.text}</ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Popover>\n      </div>\n    );\n  }\n}\n","import React, { useState, cloneElement, createElement } from \"react\";\nimport classNames from \"classnames\";\nimport { useTransition, animated } from \"@react-spring/web\";\nimport { RouteTransitionProps } from \"./PropsType\";\nimport { getProperty } from \"../common/Utils\";\n\nexport default function RouteTransition(props: RouteTransitionProps) {\n  const {\n    className,\n    transitionName,\n    prefixCls = \"bm-RouteTransition\",\n    enterStyles = {},\n    activeStyles = {},\n    leaveStyles = {},\n  } = props;\n  const styleClass = classNames(prefixCls, className, transitionName);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const transitions = useTransition(activeIndex, {\n    from: getProperty(enterStyles),\n    enter: getProperty(activeStyles),\n    leave: getProperty(leaveStyles),\n    exitBeforeEnter: true,\n  });\n\n  const renderElement = (config: any = {}) => {\n    const props2: any = {\n      key: config.key,\n    };\n    return !!props.wrapperComponent !== false\n      ? createElement(props.wrapperComponent, props2, config.data)\n      : cloneElement(config.data, props2);\n  };\n\n  return transitions((style) => (\n    <animated.div className={styleClass} style={style}>\n      {renderElement({\n        data: props.children,\n        key:\n          (props.children as any)?.key ||\n          `transition_${Math.floor(Math.random() * 100)}`,\n      })}\n    </animated.div>\n  ));\n}\n","import React, { useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { matchPath, useLocation } from \"react-router-dom\";\nimport RouteTransition from \"./RouteTransition\";\nimport { AnimatedSwitchProps } from \"./PropsType\";\nimport { getOtherProperties } from \"../common/Utils\";\n\nconst NO_MATCH = {\n  key: \"no-match\",\n};\n\nfunction AnimatedSwitch(props: AnimatedSwitchProps) {\n  const {\n    className,\n    children,\n    prefixCls = \"bm-AnimatedSwitch\",\n    ...other\n  } = props;\n  let matches: number = 0;\n  const location = useLocation();\n  const styleClass = classNames(prefixCls, className);\n  const otherProps = getOtherProperties(other, [\"key\", \"match\"]);\n\n  // const getMatchedRoute = (children: any, pathname: any) => {\n  //   return (\n  //     React.Children.toArray(children).find((child: any) => {\n  //       console.log(pathname, child.props);\n  //       return matchPath(pathname, child.props.path);\n  //     }) || NO_MATCH\n  //   );\n  // };\n\n  // const getLocationKey = (location: any) => {\n  //   return typeof location.key === \"string\" ? location.key : \"\";\n  // };\n  // const [state, setState] = useState({\n  //   key: getLocationKey(location),\n  //   match: getMatchedRoute(props.children, location.pathname),\n  // });\n\n  useEffect(() => {\n    if (props.onRouteChange) {\n      (props.onRouteChange as (event: any) => void)(location);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   const nextMatch: any = getMatchedRoute(props.children, location.pathname);\n  //   if ((state.match as any).key !== nextMatch.key) {\n  //     setState({\n  //       ...state,\n  //       match: nextMatch,\n  //       key: getLocationKey(location) + ++matches,\n  //     });\n  //     if (props.onRouteChange) {\n  //       (props.onRouteChange as (event: any) => void)(location);\n  //     }\n  //   }\n  // }, [props.location, props.children]);\n\n  return (\n    <RouteTransition className={styleClass} {...otherProps}>\n      {children}\n    </RouteTransition>\n  );\n}\n\nconst RouteWrapper = (props: any) => {\n  // When location change, Route always render, so we can get the location\n  // return (\n  //   <Routes>\n  //     <Route\n  //       children={({ location }: any) => {\n  //         return <AnimatedSwitch location={location} {...props} />;\n  //       }}\n  //     />\n  //   </Routes>\n  // );\n  return <AnimatedSwitch {...props} />;\n};\n\nexport default RouteWrapper;\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SidebarProps } from \"./PropsType\";\n\nexport default function Sidebar(props: SidebarProps) {\n  const toggleSidebar = () => {\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  const { children, dir = \"left\", drawer = true, className = \"\" } = props;\n  const [reveal, setReveal] = useState(!!props.reveal);\n  const styleClass = classNames(\n    \"Sidebar\",\n    {\n      \"Sidebar-open\": reveal,\n      \"Sidebar-drawer\": drawer,\n    },\n    `Sidebar-${dir}-reveal`,\n    className\n  );\n\n  useEffect(() => {\n    setReveal(!!props.reveal);\n  }, [props.reveal]);\n\n  return (\n    <div className={styleClass}>\n      <div className=\"Sidebar-overlay\" onClick={toggleSidebar} />\n      <div className=\"Sidebar-inner\">{children}</div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { ViewProps, ViewState } from \"./PropsType\";\n\nexport default function View(props: ViewProps) {\n  const { className, overlayBackground = \"transparent\", children } = props;\n\n  const toggleSidebar = () => {\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"View\", className)}\n      style={{\n        background: overlayBackground,\n      }}\n    >\n      {children}\n      <div className=\"View-overlay\" onClick={toggleSidebar} />\n    </div>\n  );\n}\n"],"names":["Main","menu","menus","index","isActive","node","style","RouteTransition","props","className","transitionName","prefixCls","enterStyles","activeStyles","leaveStyles","styleClass","activeIndex","setActiveIndex","transitions","renderElement","config","props2","NO_MATCH","AnimatedSwitch","children","other","matches","location","otherProps","Sidebar","toggleSidebar","dir","drawer","reveal","setReveal","View","overlayBackground"],"sourceRoot":""}