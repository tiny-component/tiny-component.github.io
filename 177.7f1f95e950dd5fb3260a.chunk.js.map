{"version":3,"file":"177.7f1f95e950dd5fb3260a.chunk.js","mappings":"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","sources":["webpack://bee-mobile/./examples/cases/AccordionCase.tsx","webpack://bee-mobile/./src/components/Accordion/Accordion.tsx","webpack://bee-mobile/./src/components/Accordion/AccordionGroup.tsx"],"sourcesContent":["import  React from 'react';\nimport  classNames from 'classnames';\nimport Accordion, { AccordionGroup } from '../../src/components/Accordion';\nimport {BaseProps} from '../../src/components/common/BaseProps';\nimport {Content} from '../../src/components/Page';\n\ninterface AccordionCaseProps extends BaseProps {}\n\nexport default class AccordionCase extends React.PureComponent<AccordionCaseProps, {}> {\n\n    handleChange = (index: number) => {\n        const ev = index;\n    }\n\n    render() {\n        const { className } = this.props;\n        const styleClass = classNames(\n            'AccordionCase',\n            className,\n        );\n        return (\n            <Content className={styleClass}>\n                <div className=\"CasePanel\">\n                    <AccordionGroup className=\"bm-paper-2dp\">\n                        <Accordion header=\"Accordion1\">\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                sit amet blandit leo lobortis eget.\n                        </Accordion>\n                        <Accordion header=\"Accordion1\">\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                sit amet blandit leo lobortis eget.\n                        </Accordion>\n                    </AccordionGroup>\n                </div>\n                <div className=\"CasePanel\">\n                    <AccordionGroup closeOthers={true} onChange={this.handleChange} className=\"bm-paper-2dp\">\n                        <Accordion header=\"Accordion1\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </Accordion>\n                        <Accordion header=\"Accordion1\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </Accordion>\n                    </AccordionGroup>\n                </div>\n            </Content>\n        );\n    }\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { Collapse } from \"../Transitions\";\nimport Ripple from \"../Ripple\";\nimport { AccordionProps } from \"./PropsType\";\n\nexport default function Accordion(props: AccordionProps) {\n  const {\n    children,\n    className,\n    disableRipple,\n    header,\n    prefixCls = \"bm-Accordion\",\n    index,\n    name,\n    disabled,\n    onChange,\n  } = props;\n  const [expanded, setExpanded] = useState(!!props.expanded);\n  const styleClass = classNames(\n    prefixCls,\n    {\n      [`${prefixCls}-expanded`]: expanded,\n    },\n    className\n  );\n\n  const handleToggle = (event: any) => {\n    if (disabled) {\n      return;\n    }\n    if (onChange) {\n      onChange({\n        event,\n        index: name || index,\n        expanded,\n      });\n    }\n  };\n\n  useEffect(() => {\n    setExpanded(!!props.expanded);\n  }, [props?.expanded]);\n\n  return (\n    <div className={styleClass}>\n      <div className=\"bm-AccordionHeader\" onClick={handleToggle}>\n        <div className=\"bm-AccordionHeader-toggle\">{header}</div>\n        {!disableRipple ? <Ripple hidden={false} /> : null}\n      </div>\n      <Collapse in={expanded} className=\"bm-AccordionContent\">\n        <Fragment>\n          <div className=\"bm-AccordionContentInner\">{children}</div>\n        </Fragment>\n      </Collapse>\n    </div>\n  );\n}\n","import React, { Children, useState, ReactElement, cloneElement } from \"react\";\nimport classNames from \"classnames\";\nimport { AccordionGroupProps } from \"./PropsType\";\n\nexport default function AccordionGroup(props: AccordionGroupProps) {\n  const {\n    children: childrenProp,\n    className,\n    closeOthers,\n    activeIndex = [],\n    disableRipple = true,\n    onChange,\n    prefixCls = \"bm-AccordionGroup\",\n  } = props;\n  const styleClass = classNames(prefixCls, className);\n  const [currentValue, setCurrentValue] = useState(\n    Array.isArray(activeIndex) ? activeIndex : [activeIndex]\n  );\n\n  const getCurrentValue = () => {\n    let values = currentValue || [];\n    const accordion = props.closeOthers;\n\n    if (!Array.isArray(currentValue)) {\n      values = [currentValue];\n    }\n\n    if (accordion && currentValue.length > 1) {\n      values = [currentValue[currentValue.length - 1]];\n    }\n    return values;\n  };\n\n  const handleChange = (event: any) => {\n    const index: number = event.index;\n    const expanded = event.expanded;\n    let values: any = [...currentValue] || [];\n\n    if (closeOthers) {\n      values = expanded ? [] : [index];\n    } else if (expanded) {\n      values = currentValue.filter((value) => {\n        return index !== value;\n      });\n    } else {\n      values.push(index);\n    }\n    setCurrentValue(values);\n    if (onChange) {\n      onChange(values);\n    }\n  };\n\n  const children = Children.map(\n    childrenProp,\n    (child: ReactElement<any>, index: number) => {\n      const { disabled, name } = child.props;\n      const expanded = getCurrentValue().indexOf(name || index) > -1;\n      return cloneElement(child, {\n        closeOthers,\n        disableRipple,\n        disabled,\n        expanded,\n        name,\n        index,\n        onChange: handleChange,\n      });\n    }\n  );\n\n  return <div className={styleClass}>{children}</div>;\n}\n"],"names":["AccordionCase","index","ev","className","styleClass","Accordion","props","children","disableRipple","header","prefixCls","name","disabled","onChange","expanded","setExpanded","handleToggle","event","Ripple","AccordionGroup","childrenProp","closeOthers","activeIndex","currentValue","setCurrentValue","getCurrentValue","values","accordion","handleChange","value","child"],"sourceRoot":""}